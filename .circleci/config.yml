# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      #- image: circleci/python:3.6.1
      - image: continuumio/miniconda3
        #astroconda/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          key: v3-miniconda-{{ .Branch }}

      - run:
          name: install miniconda
          command: |
            pwd
           ./.circleci/install_conda.sh

      - save_cache:
          key: v3-miniconda-{{ .Branch }}
          paths:
            - /home/circleci/miniconda

      - run:
          name: Setup Environment
          command: |
            source ~/miniconda/bin/activate root
            conda create --name notebooks_env --use-local
            conda install -n notebooks_env astropy scipy astroquery matplotlib jupyter pandas drizzlepac crds ccdproc acstools photutils regions pyregion
            conda activate notebooks_env
            pwd
            echo 'done settin up env'

      - run:
          name: run/convert notebooks
          command: |
            echo 'convertin nbs'
            pwd
            python ../convert.py
          name: check nbs
          command: |
            python -m "nbpages.check_nbs"



      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "requirements.txt" }}
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-dependencies-
      #
      # - run:
      #     name: install dependencies
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install -r requirements.txt
      #
      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       python manage.py test
      #
      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports
